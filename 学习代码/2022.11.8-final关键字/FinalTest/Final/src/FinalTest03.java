/*
* final修饰的实例变量：
*   注意；万变不离其宗；final修饰的变量只能赋值一次
*
* 实例变量如果没有手动赋值的情况下，系统会自动赋值
*
* java程序设计，不背锅！甩锅甩的很好
*
* 实例变量在什么时候赋值（初始化）？
*   构造方法执行过程中赋值。（new的时候赋值）
*
* 终极结论：
*   final修饰的实例变量，系统不负责赋默认值，要求程序员必须手动赋值。
*   这个手动赋值，在变量后面赋值可以，在构造方法中赋值也可以。
*   无有参数构造方法的话，必须在无参数构造方法中赋值；
*   存在有参数构造方法时，如果也写了无参数构造方法，就必须要在无参数构造方法中对
*   final中赋值。
* */

public class FinalTest03 {

    public static void main(String[] args) {
        //创建对象必须要调用无参数构造方法吗？
            //不一定；
        V v=new V();
        V v1=new V(12);

    }
}

class V{
    //实例变量
    final int a;
    final double b=0.0;//这里的0.0在赋值时，是在构造方法执行的时候，
    // 与上面的变量a的构造方法中的赋值过程是同时进行的，无先后顺序。

    public V() {//注意：在有参数构造方法存在时，无参数构造方法必须写出来才有用，否则系统自动认为无参数构造方法已经失效
        //因此在这里，如果没有无参数构造方法的话，final int a就不会报错，如果无参数构造方法出现，就必须在无参数构造方法
        //中给final int a 赋值。否则认为，调用无参数构造方法时，SUN公司就需要给a赋值，这是SUN公司避免发生的。
        this.a=8;//如果没有这句话：报错：java: 可能尚未初始化变量a
//        this.a=9;报错：java: 可能已分配变量a；已经赋值，只能赋一次值。
    }

    public V(int a) {
        this.a = a;
    }
}
