/*
构造方法：

	一个比较特殊的方法，通过构造方法可以完成对象的创建，以及实例变量的初始化。也就是说：构造方法
	是用来创建对象并且同时给对象赋值；实例变量没有赋值的时候，有系统的缺省值；

当一个类没有提供任何构造方法的时候，系统默认提供一个无参数的构造方法；

调用构造方法怎么调用：
		使用new运算符进行调用；

构造方法的语法结构是：
	[修饰符列表]  构造方法名（形式参数列表）{
			方法体；
	}

注意：1.构造方法的修饰符类表统一写public ，不写public static
			2.构造方法名必须和类名一致；
			3.构造方法不需要指定返回值类型，也不能写void，写上void表示普通方法，而非构造方法；
普通方法的语法结构：
	[修饰符列表]	返回值类型	方法名（形式参数列表）{
			方法体；
	}
*/

class Student01
{
	int num;
	String name;
	int age;
	//当前这个Student类中没有定义任何构造方法；
	//但是系统实际上会自动给Student类提供一个无参数的构造方法，即：

	public Student01(){//这里修饰符列表为public，没有返回值类型
		System.out.println("无参数的构造方法执行了");
	}//无参数构造方法建议写出来，保证不出问题

	//定义一个有参数的构造方法
	public Student01(int a){

	//这里的有参数的构造方法是在前面无参数的构造方法的基础上存在的，方法重载；如果将
	//前面的无参数的构造方法都注销掉，只留下有参数的构造方法再利用new Student（）调用就会报错，
	//要给参数，也就是说，如果没有构造方法，系统会自带一个默认的构造方法，但是你自己定义了，系统就
	//不再自主定义构造方法。

		System.out.println(a);
	}//有参数构造方法中，只要没有改变成员变量的值，就会默认赋值。布尔类型的默认值是false
}

public class Student
{
	public static void main(String[] args){
			Student01 s1=new Student01();//创建一个Student01的类；调用构造方法，采用new的运算符
			System.out.println(s1);//可以输出引用说明对象创建完成了。

			new Student01();//调用Student类的无参数构造方法
	}
}